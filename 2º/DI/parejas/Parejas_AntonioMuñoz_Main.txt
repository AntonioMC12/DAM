package com.di.parejas_antoniomuoz;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;


import android.content.Context;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.text.InputType;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MainActivity extends AppCompatActivity {

    private EditText txt, clave, valor;
    private Button guardar, borrar, buscar, actualizar, listar;
    SharedPreferences preferences;
    SharedPreferences.Editor editor;
    Context context = this;
    MediaPlayer mp;
    DialogInterface.OnClickListener dialogClickListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        iniciaElementos();

        guardar.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                OnClickSound();
                guardarDatos();
            }
        });
        buscar.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                OnClickSound();
                buscarClave();
            }
        });
        borrar.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                OnClickSound();
                borrarClave();
            }
        });
        listar.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                OnClickSound();
                listarClaves();
            }
        });
        actualizar.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                OnClickSound();
                actualizarCampos();
            }
        });
    }

    private void actualizarCampos() {
        String dato1 = clave.getText().toString();
        String dato2 = valor.getText().toString();

        if (dato1.matches("")) {
            Toast.makeText(this, "No dejes el campo Nombre vacío", Toast.LENGTH_SHORT).show();
        } else if (dato2.matches("")) {
            Toast.makeText(this, "No dejes el campo Número vacío", Toast.LENGTH_SHORT).show();
        }else if (!compruebaNumero(dato2)) {
            Toast.makeText(this, "Introduce un número correcto", Toast.LENGTH_SHORT).show();
        } else if (!preferences.contains(dato1)) {
            //Si el nombre no existe pregunta si quiere guardarlo
            //En caso afirmativo lo guarda
            //En caso negativo no hace nada
            dialogClickListener = new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    switch (which) {
                        case DialogInterface.BUTTON_POSITIVE:
                            //Yes button clicked
                            editor.putString(dato1, dato2);
                            editor.commit();
                            clave.getText().clear();
                            valor.getText().clear();
                            Toast.makeText(context, "Se ha creado una entrada nueva", Toast.LENGTH_SHORT).show();
                            break;

                        case DialogInterface.BUTTON_NEGATIVE:
                            //No button clicked
                            break;
                    }
                }
            };

            AlertDialog.Builder builder = new AlertDialog.Builder(context);
            builder.setMessage("Se va a crear una nueva entrada, ¿está seguro?").setPositiveButton("Sí", dialogClickListener)
                    .setNegativeButton("No", dialogClickListener).show();


        } else {
            editor.putString(dato1, dato2);
            editor.commit();
            Toast.makeText(this, "Campos actualizados con éxito", Toast.LENGTH_SHORT).show();
        }
    }

    private void listarClaves() {
        Map<String, ?> keys = preferences.getAll();
        String entradas = "";
        for (Map.Entry<String, ?> entry : keys.entrySet()) {
            entradas += (entry.getKey() + " : " + entry.getValue().toString() + "\n");
        }
        txt.setText(entradas);
    }

    public void borrarClave() {
        String dato1 = clave.getText().toString();
        if (dato1.matches("")) {
            Toast.makeText(this, "No dejes el campo Nombre vacío", Toast.LENGTH_SHORT).show();
        } else if (!preferences.contains(dato1)) {
            Toast.makeText(this, "No existe el campo " + dato1, Toast.LENGTH_SHORT).show();
        } else {
            //Pide al usuario una confirmación para borrar
            dialogClickListener = new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    switch (which) {
                        case DialogInterface.BUTTON_POSITIVE:
                            //Yes button clicked
                            editor.remove(dato1);
                            editor.apply();
                            clave.getText().clear();
                            valor.getText().clear();
                            Toast.makeText(context, "Campos borrados con éxito", Toast.LENGTH_SHORT).show();
                            break;

                        case DialogInterface.BUTTON_NEGATIVE:
                            //No button clicked
                            break;
                    }
                }
            };

            AlertDialog.Builder builder = new AlertDialog.Builder(context);
            builder.setMessage("Se va a eleminar la entrada, ¿está seguro?").setPositiveButton("Sí", dialogClickListener)
                    .setNegativeButton("No", dialogClickListener).show();

        }
    }

    public void buscarClave() {
        String dato1 = clave.getText().toString();

        if (dato1.matches("")) {
            Toast.makeText(this, "No dejes el campo Nombre vacío", Toast.LENGTH_SHORT).show();
        } else if (!preferences.contains(dato1)) {
            Toast.makeText(this, "No existe el campo " + dato1, Toast.LENGTH_SHORT).show();
        } else {
            String dato2 = preferences.getString(dato1, "");
            valor.setText(dato2);
        }
    }

    public void guardarDatos() {
        String dato1 = clave.getText().toString();
        String dato2 = valor.getText().toString();

        if (dato1.matches("")) {
            Toast.makeText(this, "No dejes el campo Nombre vacío", Toast.LENGTH_SHORT).show();
        } else if (dato2.matches("")) {
            Toast.makeText(this, "No dejes el campo Número vacío", Toast.LENGTH_SHORT).show();
        } else if (!compruebaNumero(dato2)) {
            Toast.makeText(this, "Introduce un número correcto", Toast.LENGTH_SHORT).show();
        } else if (preferences.contains(dato1)) {
            //Si el nombre existe pregunta si quiere guardarlo
            //En caso afirmativo lo sobreescribe
            //En caso negativo no hace nada
            dialogClickListener = new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    switch (which) {
                        case DialogInterface.BUTTON_POSITIVE:
                            //Yes button clicked
                            editor.putString(dato1, dato2);
                            editor.commit();
                            clave.getText().clear();
                            valor.getText().clear();
                            Toast.makeText(context, "Se ha sobreescrito una entrada", Toast.LENGTH_SHORT).show();
                            break;

                        case DialogInterface.BUTTON_NEGATIVE:
                            //No button clicked
                            break;
                    }
                }
            };

            AlertDialog.Builder builder = new AlertDialog.Builder(context);
            builder.setMessage("Se va a sobreescribir una nueva entrada, ¿está seguro?").setPositiveButton("Sí", dialogClickListener)
                    .setNegativeButton("No", dialogClickListener).show();

        } else {
            editor.putString(dato1, dato2);
            editor.commit();
            clave.getText().clear();
            valor.getText().clear();
            Toast.makeText(this, "Campos guardados con éxito", Toast.LENGTH_SHORT).show();
        }
    }

    public void iniciaElementos() {
        mp = MediaPlayer.create(context, R.raw.clickbutton);
        clave = findViewById(R.id.EtxtClave);
        valor = findViewById(R.id.EtxtValor);
        valor.setInputType(InputType.TYPE_CLASS_NUMBER);
        txt = findViewById(R.id.textoListar);
        txt.setEnabled(false);
        guardar = findViewById(R.id.buttGuardar);
        borrar = findViewById(R.id.buttBorrar);
        buscar = findViewById(R.id.buttBuscar);
        actualizar = findViewById(R.id.buttActualizar);
        listar = findViewById(R.id.buttListar);
        preferences = this.getSharedPreferences("informacion", Context.MODE_PRIVATE);
        editor = preferences.edit();
    }

    public void OnClickSound() {
        try {
            if (mp.isPlaying()) {
                mp.stop();
                mp.release();
                mp = MediaPlayer.create(context, R.raw.clickbutton);
            }
            mp.start();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public boolean compruebaNumero(String number) {

        String regEx = "^\\+?(6\\d{2}|7[1-9]\\d{1})\\d{6}$";

        Pattern pattern = Pattern.compile(regEx, Pattern.UNICODE_CASE);
        Matcher matcher = pattern.matcher(number);

        if (matcher.matches())
            return true;
        else
            return false;
    }
}